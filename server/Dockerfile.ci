# Dockerfile for use by the continuous integration server (ci), in order to
# build and test the application.
#
# This Dockerfile provides the appropriate environment for building and testing
# the application. It should _not_ be used for creating Docker images for use
# in production.

FROM ruby:2.7.5-slim

# Install apt based dependencies required to run Rails as
# well as RubyGems. As the Ruby image itself is based on a
# Debian image, we use apt-get to install those.
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
                       build-essential \
                       git \
                       libpq-dev \
                       libsqlite3-dev \
    && `# The following lines are necessary to install nodejs and yarn` \
    && apt-get install -y --no-install-recommends curl gnupg2 \
    && curl -sL http://deb.nodesource.com/setup_16.x | bash - \
    && apt-get install -y --no-install-recommends nodejs \
    && curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | gpg --dearmor | tee /usr/share/keyrings/yarnkey.gpg >/dev/null \
    && echo "deb [signed-by=/usr/share/keyrings/yarnkey.gpg] https://dl.yarnpkg.com/debian stable main" | tee /etc/apt/sources.list.d/yarn.list \
    && apt-get update && apt-get install -y --no-install-recommends yarn \
    && apt-get clean

# Install Google Chrome for system tests
RUN apt-get install -y wget \
    && wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \
    && apt-get -y --no-install-recommends install ./google-chrome-stable_current_amd64.deb \
    && apt-get clean

# Copy in the Gemfile and Gemfile.lock, and install the gems
# This makes builds where the Gemfile/Gemfile.lock file hasn't
# changed faster by having the correct gems already downloaded
# and cached.
COPY Gemfile* /tmp/

# Run bundler to install the gems
WORKDIR /tmp
RUN gem install bundler --version 2.1.4
RUN bundle config set without 'production' \
    && bundle install

WORKDIR /